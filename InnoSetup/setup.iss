; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "MastercardHost"
#define MyAppVersion "1.0.0.3"
#define MyAppPublisher "Checkmat Bruce"
#define MyAppURL "https://www.example.com/"
#define MyAppExeName "MastercardHost.exe"
#define MyAppAssocName MyAppName + ""
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{4B2767DB-08F5-456B-9269-C895B0554599}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\MasercardHost
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputDir=D:\Work\VS_Project\MastercardHost\InnoSetup
OutputBaseFilename=mysetup
Password=123456
Encryption=yes
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\Config\*"; DestDir: "{app}\Config"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\Google.Protobuf.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\MastercardHost.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\MastercardHost.pdb"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\MvvmHelpers.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\Newtonsoft.Json.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\nlog.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\NLog.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\protobuf-net.Core.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\protobuf-net.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\System.Buffers.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\System.Collections.Immutable.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\System.Memory.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\System.Numerics.Vectors.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\System.Runtime.CompilerServices.Unsafe.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\System.ValueTuple.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\TcpSharp.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Work\VS_Project\MastercardHost\bin\Debug\net48\zh-CN\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[InstallDelete]
; 安装前清理旧版本
Type: filesandordirs; Name: "{app}"

[UninstallDelete]
; 卸载时彻底删除整个目录
Type: filesandordirs; Name: "{app}"

[Code]
// 声明 Windows API
function TerminateProcessByID(ProcessID: Cardinal): Boolean;
external 'TerminateProcess@kernel32.dll stdcall';

// 检查进程是否存在
function IsProcessRunning(const ExeName: string): Boolean;
var
  WMIC, WbemScriptor, ProcessList: Variant;
begin
  Result := False;
  try
    WMIC := CreateOleObject('WbemScripting.SWbemLocator');
    WbemScriptor := WMIC.ConnectServer('localhost', 'root\CIMV2');
    ProcessList := WbemScriptor.ExecQuery(
      Format('SELECT * FROM Win32_Process WHERE Name="%s"', [ExeName])
    );
    Result := (ProcessList.Count > 0);
  except
    Result := False;
  end;
end;

// 终止进程（静默模式，仅在失败时弹窗）
procedure KillProcessSilently(const ExeName: string);
var
  WMIC, WbemScriptor, ProcessList, Process: Variant;
  i: Integer;
  Success: Boolean;
begin
  Success := True;
  try
    WMIC := CreateOleObject('WbemScripting.SWbemLocator');
    WbemScriptor := WMIC.ConnectServer('localhost', 'root\CIMV2');
    ProcessList := WbemScriptor.ExecQuery(
      Format('SELECT * FROM Win32_Process WHERE Name="%s"', [ExeName])
    );
    for i := 0 to ProcessList.Count - 1 do
    begin
      Process := ProcessList.ItemIndex(i);
      if not TerminateProcessByID(Process.ProcessID) then
        Success := False;
    end;
  except
    Success := False;
  end;

  if not Success then
    MsgBox(Format('无法终止进程 %s，请手动关闭后重试。', [ExeName]), mbError, MB_OK);
end;

// 卸载时静默处理
procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
  if CurUninstallStep = usUninstall then
  begin
    // 仅在进程运行时尝试终止（无日志、无成功提示）
    if IsProcessRunning('{#MyAppExeName}') then
      KillProcessSilently('{#MyAppExeName}');

    // 强制删除目录
    DelTree(ExpandConstant('{app}'), True, True, True);
  end;
end;

